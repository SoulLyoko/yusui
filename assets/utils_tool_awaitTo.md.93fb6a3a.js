import{_ as t,o as a,c as s,j as e}from"./app.298b2e46.js";const A=JSON.parse('{"title":"awaitTo/to","description":"","frontmatter":{},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"返回值","slug":"返回值","link":"#返回值","children":[]}],"relativePath":"utils/tool/awaitTo.md"}'),n={name:"utils/tool/awaitTo.md"},o=e(`<h1 id="awaitto-to" tabindex="-1">awaitTo/to <a class="header-anchor" href="#awaitto-to" aria-hidden="true">#</a></h1><p>try catch 的替代方案</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// to = awaitTo</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">to</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">getList</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (err) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> ElMessage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#A6ACCD;">(err)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h2><table><thead><tr><th>名称</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>promise</td><td>传入执行的 promise</td><td>Object</td><td>-</td><td>-</td></tr><tr><td>errorExt</td><td>自定义错误数据对象</td><td>Object</td><td>-</td><td>-</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-hidden="true">#</a></h2><p>([Error|null,any|undefine]): 返回一个数组，数组第一项为 Promise 执行失败抛出的错误，第二项为 Promise 执行成功的返回值</p>`,8),l=[o];function r(p,c,i,d,h,y){return a(),s("div",null,l)}const C=t(n,[["render",r]]);export{A as __pageData,C as default};

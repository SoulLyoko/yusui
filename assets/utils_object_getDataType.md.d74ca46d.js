import{_ as s,j as a,k as n,V as l}from"./chunks/framework.c2438ed3.js";const t=JSON.parse('{"title":"getDataType","description":"","frontmatter":{},"headers":[],"relativePath":"utils/object/getDataType.md","filePath":"utils/object/getDataType.md"}'),e={name:"utils/object/getDataType.md"},p=l(`<h1 id="getdatatype" tabindex="-1">getDataType <a class="header-anchor" href="#getdatatype" aria-label="Permalink to &quot;getDataType&quot;">​</a></h1><p>获取数据类型</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &quot;Boolean&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &quot;Null&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &quot;Undefined&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">123</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &quot;Number&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &quot;String&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">// &quot;Symbol&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">([]) </span><span style="color:#676E95;font-style:italic;">// &quot;Array&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &quot;Object&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &quot;Function&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()) </span><span style="color:#676E95;font-style:italic;">// &quot;Date&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">getDataType</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">// &quot;RegExp&quot;</span></span></code></pre></div>`,4),o=[p];function c(y,A,i,D,C,F){return a(),n("div",null,o)}const r=s(e,[["render",c]]),_=Object.freeze(Object.defineProperty({__proto__:null,__pageData:t,default:r},Symbol.toStringTag,{value:"Module"}));export{_,t as __pageData,r as default};

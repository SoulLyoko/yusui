import{_ as s,c as i,o as a,R as t}from"./chunks/framework.9dEYo5Bo.js";const b=JSON.parse('{"title":"filterObj","description":"","frontmatter":{},"headers":[],"relativePath":"utils/object/filterObj.md","filePath":"utils/object/filterObj.md"}'),e={name:"utils/object/filterObj.md"},l=t(`<h1 id="filterobj" tabindex="-1">filterObj <a class="header-anchor" href="#filterobj" aria-label="Permalink to &quot;filterObj&quot;">​</a></h1><p>过滤对象值和字段</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exampleData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;b&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterObj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exampleData) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { a: 1, b: &quot;b&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterObj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exampleData, []) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { a: 1, b: &quot;b&quot;, c: undefined, d: null }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterObj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(exampleData, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;b&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// {}</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table><thead><tr><th>名称</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>obj</td><td>被过滤对象</td><td>Object</td><td>-</td><td>-</td></tr><tr><td>values</td><td>被过滤的值，全等匹配</td><td>Array</td><td>-</td><td>[undefined, null]</td></tr><tr><td>fields</td><td>被过滤字段，模糊匹配</td><td>Array</td><td>-</td><td>[]</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p>(Object): 过滤后的对象</p>`,8),n=[l];function h(d,p,r,k,o,c){return a(),i("div",null,n)}const g=s(e,[["render",h]]);export{b as __pageData,g as default};

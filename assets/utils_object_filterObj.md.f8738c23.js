import{_ as s,c as a,o as t,V as l}from"./chunks/framework.6b67ac47.js";const A=JSON.parse('{"title":"filterObj","description":"","frontmatter":{},"headers":[],"relativePath":"utils/object/filterObj.md","filePath":"utils/object/filterObj.md"}'),n={name:"utils/object/filterObj.md"},o=l(`<h1 id="filterobj" tabindex="-1">filterObj <a class="header-anchor" href="#filterobj" aria-label="Permalink to &quot;filterObj&quot;">​</a></h1><p>过滤对象值和字段</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> exampleData </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">d</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">filterObj</span><span style="color:#A6ACCD;">(exampleData) </span><span style="color:#676E95;font-style:italic;">// { a: 1, b: &quot;b&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">filterObj</span><span style="color:#A6ACCD;">(exampleData</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> []) </span><span style="color:#676E95;font-style:italic;">// { a: 1, b: &quot;b&quot;, c: undefined, d: null }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">filterObj</span><span style="color:#A6ACCD;">(exampleData</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined,</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]) </span><span style="color:#676E95;font-style:italic;">// {}</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table><thead><tr><th>名称</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>obj</td><td>被过滤对象</td><td>Object</td><td>-</td><td>-</td></tr><tr><td>values</td><td>被过滤的值，全等匹配</td><td>Array</td><td>-</td><td>[undefined, null]</td></tr><tr><td>fields</td><td>被过滤字段，模糊匹配</td><td>Array</td><td>-</td><td>[]</td></tr></tbody></table><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p>(Object): 过滤后的对象</p>`,8),e=[o];function p(r,c,d,D,i,y){return t(),a("div",null,e)}const C=s(n,[["render",p]]);export{A as __pageData,C as default};
